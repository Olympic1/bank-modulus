name: Main

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php:
          - '5.6'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
        deps:
          - highest
          - lowest
        include:
          - os: ubuntu-latest
            php: '8.2'
            phpstan: 1
          - os: ubuntu-latest
            php: '8.1'
            phpstan: 1
          - os: ubuntu-latest
            php: '8.1'
            coverage: 1
          - os: ubuntu-latest
            php: '7.4'
            coverage: 1
          - os: ubuntu-latest
            php: '7.4'
            phpstan: 1
          - os: ubuntu-latest
            php: '5.6'
            coverage: 1
      fail-fast: true
    name: PHP ${{ matrix.php }} / ${{ matrix.deps }}
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: ${{ matrix.php == '5.6' && 'composer:2.2' || 'composer' }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Enable assertions
        run: echo 'zend.assertions=1' | sudo tee /etc/php/${{ matrix.php }}/cli/conf.d/assert.ini >/dev/null
      - name: Install dependencies
        run: |
          sudo phpdismod xdebug

          export WITH_PHP="${{ matrix.php }}"
          export WITH_PHPSTAN="${{ matrix.phpstan }}"

          scripts/deps "${{ matrix.deps }}"
      - name: PHPUnit
        run: |
          vendor/bin/phpunit --version | head -n1 >&2

          if [ "${{ matrix.coverage }}" = "1" ]; then
            sudo phpenmod xdebug
            vendor/bin/phpunit --verbose $args --coverage-clover=coverage.xml
            sudo phpdismod xdebug
          else
            vendor/bin/phpunit --verbose $args
          fi
      - name: PHPStan
        if: matrix.phpstan == 1
        run: |
          composer bin cs2pr install
          composer bin phpstan install

          (vendor/bin/phpstan analyse -c .phpstan.neon --no-progress --error-format=checkstyle || true) | vendor/bin/cs2pr
      - name: Upload coverage reports to Codecov
        if: matrix.coverage == 1
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
